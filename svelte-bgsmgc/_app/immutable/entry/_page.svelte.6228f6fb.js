import{S as _e,i as be,s as Ie,k as b,q as F,a as z,l as I,m as N,r as H,h as _,c as A,n as v,b as K,G as p,J as Y,u as Z,H as oe,K as W,L as we,p as re}from"../chunks/index.dcdc7bd0.js";function ce(n){const s=Array.from({length:Math.sqrt(n)},()=>"1fr");return`grid-template-columns: repeat(${Object.keys(s).length}, 1fr);`}function ie(n){return Array.from({length:n},()=>{let s=Math.floor(Math.random()*10)+1,e=Se(s);return{health:s,color:e}})}function Se(n){const s=255-n*25,e=n*25;return`rgb(${s}, ${e}, 0)`}function Me(n,s){return n===s?s:Math.floor(Math.random()*(s-n+1)+n)}function xe(n,s,e,t){const r=[],o=new Set;console.log("Total sets are being generated"),console.log("Creating new neighbors between: "+e+" and "+t);for(let c=0;c<s;c++){let g;do g=Math.floor(Math.random()*n.length);while(o.has(g));o.add(g);let h=Me(e,t);const i=Math.sqrt(n.length),u=g%i,m=Math.floor(g/i),d=Math.max(m-1,0),w=Math.max(u-1,0),y=Math.min(m+1,i-1),B=Math.min(u+1,i-1),f=[];for(let D=d;D<=y;D++)for(let O=w;O<=B;O++){const j=D*i+O;j!==g&&f.push(j)}f.length<h&&(h=f.length);const T=[];for(;T.length<h;){const D=f[Math.floor(Math.random()*f.length)];T.includes(D)||T.push(D)}let J=[g,...T];r.push(J),console.log(`Set: ${c}) 
		Starting Index = ${g} | Total Neighbors = ${h}
		Neighbors = ${T}`)}return r}function Ee(n,s,e,t,r,o){console.log("--------------------"),console.log("Running Algorithm");let c=[],g=xe(n,s,r,o);g.sort((i,u)=>i.length-u.length),console.log("Total Sets: "),console.table(g),console.log(g),c.push(g.pop()),e--;let h=new Set;for(c.forEach(i=>{i.forEach(u=>h.add(u))});e!==0;){let i=[],u=0;g.forEach(d=>{let w=0;d.forEach(y=>{h.has(y)||w++}),console.log("Set# ",u,d,"Non-overlap: ",w),i.push([u,w]),u++}),console.log("nonOverlapArray"),console.table(i),i.sort((d,w)=>d[1]-w[1]),console.log("nonOverlapArray 2"),console.table(i);let m=i[i.length-1][0];console.log("Checking"),c.push(g[m]),g.splice(m,1),console.log("totalSetsArray"),console.table(g),c.forEach(d=>{h.add(d)}),e--}return console.log("Final set  ",c),console.log("--------------------"),c}function ue(n,s,e){const t=n.slice();return t[13]=s[e],t}function he(n,s,e){const t=n.slice();return t[13]=s[e],t}function ge(n,s,e){const t=n.slice();return t[18]=s[e],t}function fe(n,s,e){const t=n.slice();return t[21]=s[e],t[23]=e,t}function de(n){let s,e,t,r;return{c(){s=b("div"),e=b("div"),t=F(n[23]),r=z(),this.h()},l(o){s=I(o,"DIV",{class:!0,style:!0});var c=N(s);e=I(c,"DIV",{class:!0});var g=N(e);t=H(g,n[23]),g.forEach(_),r=A(c),c.forEach(_),this.h()},h(){v(e,"class","matrix-board-cell-value svelte-1jcselw"),v(s,"class","matrix-board-cell svelte-1jcselw"),re(s,"background-color",n[21].color)},m(o,c){K(o,s,c),p(s,e),p(e,t),p(s,r)},p(o,c){c&2&&re(s,"background-color",o[21].color)},d(o){o&&_(s)}}}function pe(n){let s,e=n[18].name+"",t;return{c(){s=b("div"),t=F(e)},l(r){s=I(r,"DIV",{});var o=N(s);t=H(o,e),o.forEach(_)},m(r,o){K(r,s,o),p(s,t)},p(r,o){o&1&&e!==(e=r[18].name+"")&&Z(t,e)},d(r){r&&_(s)}}}function ve(n){let s,e,t,r,o,c,g,h,i;return{c(){s=b("div"),e=b("input"),g=z(),this.h()},l(u){s=I(u,"DIV",{class:!0});var m=N(s);e=I(m,"INPUT",{type:!0,class:!0,step:!0,min:!0,max:!0,id:!0}),g=A(m),m.forEach(_),this.h()},h(){v(e,"type","range"),v(e,"class","slider svelte-1jcselw"),v(e,"step","1"),v(e,"min",t=n[13].min),v(e,"max",r=n[13].max),e.value=o=n[13].value,v(e,"id",c=n[13].id),v(s,"class","wrapper")},m(u,m){K(u,s,m),p(s,e),p(s,g),h||(i=Y(e,"change",n[6]),h=!0)},p(u,m){m&1&&t!==(t=u[13].min)&&v(e,"min",t),m&1&&r!==(r=u[13].max)&&v(e,"max",r),m&1&&o!==(o=u[13].value)&&(e.value=o),m&1&&c!==(c=u[13].id)&&v(e,"id",c)},d(u){u&&_(s),h=!1,i()}}}function me(n){let s,e=n[13].value+"",t;return{c(){s=b("div"),t=F(e)},l(r){s=I(r,"DIV",{});var o=N(s);t=H(o,e),o.forEach(_)},m(r,o){K(r,s,o),p(s,t)},p(r,o){o&1&&e!==(e=r[13].value+"")&&Z(t,e)},d(r){r&&_(s)}}}function ke(n){let s,e,t,r,o,c,g,h,i,u,m,d,w,y,B,f,T,J,D,O,j,X,$,q=n[1],S=[];for(let a=0;a<q.length;a+=1)S[a]=de(fe(n,q,a));let G=n[0],M=[];for(let a=0;a<G.length;a+=1)M[a]=pe(ge(n,G,a));let R=n[0],x=[];for(let a=0;a<R.length;a+=1)x[a]=ve(he(n,R,a));let U=n[0],E=[];for(let a=0;a<U.length;a+=1)E[a]=me(ue(n,U,a));return{c(){s=b("div"),e=b("div"),t=b("div"),r=F(n[3]),o=z(),c=b("div");for(let a=0;a<S.length;a+=1)S[a].c();g=z(),h=b("div"),i=b("div"),u=b("button"),m=F("Create New Board"),d=z(),w=b("button"),y=F("Run Algorithm"),B=z(),f=b("div"),T=b("div");for(let a=0;a<M.length;a+=1)M[a].c();J=z(),D=b("div");for(let a=0;a<x.length;a+=1)x[a].c();O=z(),j=b("div");for(let a=0;a<E.length;a+=1)E[a].c();this.h()},l(a){s=I(a,"DIV",{class:!0});var k=N(s);e=I(k,"DIV",{class:!0});var l=N(e);t=I(l,"DIV",{class:!0});var V=N(t);r=H(V,n[3]),V.forEach(_),o=A(l),c=I(l,"DIV",{class:!0,style:!0});var ee=N(c);for(let C=0;C<S.length;C+=1)S[C].l(ee);ee.forEach(_),l.forEach(_),g=A(k),h=I(k,"DIV",{class:!0});var L=N(h);i=I(L,"DIV",{class:!0});var Q=N(i);u=I(Q,"BUTTON",{class:!0});var te=N(u);m=H(te,"Create New Board"),te.forEach(_),d=A(Q),w=I(Q,"BUTTON",{class:!0});var le=N(w);y=H(le,"Run Algorithm"),le.forEach(_),Q.forEach(_),B=A(L),f=I(L,"DIV",{class:!0});var P=N(f);T=I(P,"DIV",{class:!0});var se=N(T);for(let C=0;C<M.length;C+=1)M[C].l(se);se.forEach(_),J=A(P),D=I(P,"DIV",{class:!0});var ae=N(D);for(let C=0;C<x.length;C+=1)x[C].l(ae);ae.forEach(_),O=A(P),j=I(P,"DIV",{class:!0});var ne=N(j);for(let C=0;C<E.length;C+=1)E[C].l(ne);ne.forEach(_),P.forEach(_),L.forEach(_),k.forEach(_),this.h()},h(){v(t,"class","matrix-message-status svelte-1jcselw"),v(c,"class","matrix-board svelte-1jcselw"),v(c,"style",n[2]),v(e,"class","matrix-container"),v(u,"class","svelte-1jcselw"),v(w,"class","svelte-1jcselw"),v(i,"class","settings-buttons svelte-1jcselw"),v(T,"class","settings-inputs-labels svelte-1jcselw"),v(D,"class","settings-inputs-sliders"),v(j,"class","settings-inputs-values"),v(f,"class","settings-inputs svelte-1jcselw"),v(h,"class","settings svelte-1jcselw"),v(s,"class","container svelte-1jcselw")},m(a,k){K(a,s,k),p(s,e),p(e,t),p(t,r),p(e,o),p(e,c);for(let l=0;l<S.length;l+=1)S[l]&&S[l].m(c,null);p(s,g),p(s,h),p(h,i),p(i,u),p(u,m),p(i,d),p(i,w),p(w,y),p(h,B),p(h,f),p(f,T);for(let l=0;l<M.length;l+=1)M[l]&&M[l].m(T,null);p(f,J),p(f,D);for(let l=0;l<x.length;l+=1)x[l]&&x[l].m(D,null);p(f,O),p(f,j);for(let l=0;l<E.length;l+=1)E[l]&&E[l].m(j,null);X||($=[Y(u,"pointerdown",n[4]),Y(w,"pointerdown",n[5])],X=!0)},p(a,[k]){if(k&8&&Z(r,a[3]),k&2){q=a[1];let l;for(l=0;l<q.length;l+=1){const V=fe(a,q,l);S[l]?S[l].p(V,k):(S[l]=de(V),S[l].c(),S[l].m(c,null))}for(;l<S.length;l+=1)S[l].d(1);S.length=q.length}if(k&4&&v(c,"style",a[2]),k&1){G=a[0];let l;for(l=0;l<G.length;l+=1){const V=ge(a,G,l);M[l]?M[l].p(V,k):(M[l]=pe(V),M[l].c(),M[l].m(T,null))}for(;l<M.length;l+=1)M[l].d(1);M.length=G.length}if(k&65){R=a[0];let l;for(l=0;l<R.length;l+=1){const V=he(a,R,l);x[l]?x[l].p(V,k):(x[l]=ve(V),x[l].c(),x[l].m(D,null))}for(;l<x.length;l+=1)x[l].d(1);x.length=R.length}if(k&1){U=a[0];let l;for(l=0;l<U.length;l+=1){const V=ue(a,U,l);E[l]?E[l].p(V,k):(E[l]=me(V),E[l].c(),E[l].m(j,null))}for(;l<E.length;l+=1)E[l].d(1);E.length=U.length}},i:oe,o:oe,d(a){a&&_(s),W(S,a),W(M,a),W(x,a),W(E,a),X=!1,we($)}}}function Ne(n,s,e){let t=[{name:"Board Size",min:10,max:20,value:10,id:"map-size"},{name:"Sets To Generate",min:2,max:10,value:2,id:"total-sets"},{name:"Sets To Select",min:2,max:10,value:2,id:"select-sets"},{name:"Step Size",min:2,max:4,value:2,id:"step-size"},{name:"Min Neighbor",min:0,max:8,value:0,id:"min-neighbors"},{name:"Max Neighbors",min:0,max:8,value:0,id:"max-neighbors"},{name:"Transition Time",min:1,max:3,value:1,id:"transition-time"}],r=parseInt(t[0].value)**2,o=parseInt(t[1].value),c=parseInt(t[2].value),g=parseInt(t[3].value),h=parseInt(t[4].value),i=parseInt(t[5].value),u=ie(r);console.log("Initial Matrix"),console.log(u);let m=ce(r),d="Board is set";function w(){console.log("Building a new Board..."),e(3,d="New Board Set"),console.log(),e(1,u.length=0,u),r=parseInt(t[0].value)**2,e(1,u=ie(r)),e(2,m=ce(r)),console.log(u)}function y(){e(3,d="Executing: Big Step Greedy Maximum Ground Coverage"),Ee(u,o,c,g,h,i)}function B(f){switch(f.target.id){case"map-size":e(0,t[0].value=parseInt(f.target.value),t),r=parseInt(f.target.value)**2,e(3,d=`New board size: ${Math.sqrt(r)} x ${Math.sqrt(r)} = ${r}
`),e(3,d+='Press "Create new board" to set up a new board');break;case"total-sets":e(0,t[1].value=parseInt(f.target.value),t),o=parseInt(f.target.value),parseInt(o)<parseInt(c)&&(e(0,t[1].value=o,t),e(0,t[2].value=o,t),c=o);let T=parseInt(o)*parseInt(i)+parseInt(o);e(3,d=`Total sets to generate: ${o}
`),e(3,d+=`Random starting point.
`),e(3,d+=`They will produce: (${o} + ${o} x ${i}) = ${T} cells at most`);break;case"select-sets":e(0,t[2].value=parseInt(f.target.value),t),c=parseInt(f.target.value),e(0,t[2].value=c,t),parseInt(c)>parseInt(o)&&(e(0,t[1].value=c,t),e(0,t[2].value=c,t),o=c),e(3,d=`Total sets to select from a pile: ${c} / ${o}`);break;case"step-size":e(0,t[3].value=parseInt(f.target.value),t),g=parseInt(f.target.value),e(3,d=`Step size is: ${g}
`),e(3,d+=`This means sets to the power of step size combinations
`);break;case"min-neighbors":e(0,t[4].value=parseInt(f.target.value),t),h=parseInt(f.target.value),e(3,d=`Neighbors between: ${h} and ${i}`),parseInt(h)>parseInt(i)&&(e(0,t[5].value=h,t),e(0,t[4].value=h,t),i=t[5].value,e(3,d=`Neighbors between: ${h} and ${i}`));break;case"max-neighbors":e(0,t[5].value=parseInt(f.target.value),t),i=parseInt(f.target.value),e(3,d=`Neighbors between: ${h} and ${i}`),parseInt(i)<parseInt(h)&&(e(0,t[4].value=i,t),e(0,t[5].value=i,t),h=i,e(3,d=`Neighbors between: ${h} and ${i}`));break}}return[t,u,m,d,w,y,B]}class Ce extends _e{constructor(s){super(),be(this,s,Ne,ke,Ie,{})}}export{Ce as default};
